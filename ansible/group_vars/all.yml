---
# Choose your vault:
# - keepassxc (fully independent, local)
# - bitwarden  (cloud client; optional later)
# - vaultwarden (self-hosted via Docker)
vault_choice: keepassxc

# -----------------------------
# Identity lookup configuration
# -----------------------------
# You may still override with encrypted vars in ansible-vault by defining:
#   git_user_name: "..."
#   git_user_email: "..."
# If those are set anywhere (e.g. group_vars/all.vault.yml), they take precedence.

# Common logical item/entry name across backends
git_identity_item_name: "Git Identity"

# KeePassXC (fully local/offline)
# Requires env KDBX_PASSWORD set at runtime.
keepass_db_path: "{{ ansible_env.HOME }}/secrets/identity.kdbx"
keepass_full_name_field: "UserName"
keepass_email_field: "Email"

# Bitwarden / Vaultwarden (self-hosted or cloud)
# Requires `bw` CLI and an unlocked session (env BW_SESSION).
# For Vaultwarden also set env BW_SERVER (e.g. https://vault.local).
bitwarden_full_name_field: "full_name"
bitwarden_email_field: "email"

# --------------------------------------------------------------------
# ROLES CONFIGURATION
# --------------------------------------------------------------------
# Choose which tools to install. Set to true/include to install,
# comment out or remove to skip. Start with a minimal setup and
# add more tools as needed.

# -----------------------------
# Fonts catalog (unchanged)
# -----------------------------
fonts:
  macos_casks:
    - font-jetbrains-mono-nerd-font
    - font-fira-code-nerd-font
  debian_apt:
    - fonts-jetbrains-mono
    - fonts-firacode
  fedora_dnf:
    - jetbrains-mono-fonts
    - fira-code-fonts
  arch_pacman:
    - ttf-jetbrains-mono
    - ttf-firacode
  opensuse_zypper:
    - jetbrains-mono-fonts
    - fira-code-fonts

# -----------------------------
# Vaultwarden container (only used when vault_choice == 'vaultwarden')
# -----------------------------
vaultwarden_data_dir: "/var/lib/vaultwarden"
vaultwarden_port: 8087
vaultwarden_signups_allowed: false
vaultwarden_domain: "http://localhost:8087"

# APT behaviour (Debian/Ubuntu)
apt_force_ipv4: true              # force APT to use IPv4 to avoid broken v6 paths
apt_http_proxy: ""                # optional, e.g. http://proxy.local:3128
apt_https_proxy: ""               # optional, e.g. http://proxy.local:3128

@@
-# Desired application state (cross-platform normalised list).
-# Each item: { name, id, source, version? }
-#   source âˆˆ brew|cask|apt|pacman|zypper|flatpak
-# Populate this with your authoritative list. Example:
-#
-# apps_desired:
-#   - { name: "jq",        id: "jq",        source: "brew" }
-#   - { name: "KeepassXC", id: "keepassxc", source: "cask" }
-#
-apps_desired: []
+# --------------------------------------------------------------------
+# ROLES CONFIGURATION
+# --------------------------------------------------------------------
+# Choose which tools to install. Set to true/include to install,
+# comment out or remove to skip. Start with a minimal setup and
+# add more tools as needed.
+
+default_roles:
+  # === Core System Tools (Recommended) ===
+  - system         # Essential system configurations and tools
+  - fonts          # Developer-friendly fonts (Nerd Fonts)
+  
+  # === Development Core ===
+  - git            # Version control system
+  - neovim         # Modern text editor (or use 'vim')
+  - tmux           # Terminal multiplexer for session management
+  
+  # === Shell Environment ===
+  - zsh            # Modern shell with oh-my-zsh
+  - starship       # Beautiful shell prompt
+  - fzf            # Fuzzy finder for files and commands
+  
+  # === File Management ===
+  - bat            # Better 'cat' with syntax highlighting
+  - lsd            # Better 'ls' with icons and colors
+  - zoxide         # Smart 'cd' command that learns your habits
+  
+  # === Development Languages ===
+  - python         # Python programming language
+  - nvm            # Node Version Manager
+  - npm            # Node Package Manager
+  - go             # Go programming language
+  # - rust         # Rust programming language
+  # - ruby         # Ruby programming language
+  # - lua          # Lua programming language
+  
+  # === DevOps & Cloud Tools ===
+  # - docker       # Container platform
+  # - podman       # Alternative container platform
+  # - terraform    # Infrastructure as Code
+  # - terragrunt   # Terraform wrapper for DRY configurations
+  # - helm         # Kubernetes package manager
+  # - k8s          # Kubernetes command-line tools
+  # - k9s          # Kubernetes cluster management UI
+  
+  # === GitHub Integration ===
+  - gh             # GitHub CLI for repo management
+  - lazygit        # Terminal UI for git operations
+  
+  # === System Monitoring ===
+  # - btop         # Modern system monitor (better than htop)
+  # - neofetch     # System information display
+  # - nerdfetch    # Alternative system info with ASCII art
+  # - ncdu         # Disk usage analyzer
+  
+  # === Terminal Emulators ===
+  # - kitty        # GPU-accelerated terminal
+  # - warp         # Modern terminal with AI features
+  
+  # === Productivity Tools ===
+  # - obsidian     # Knowledge management and note-taking
+  # - raycast      # macOS launcher and productivity tool
+  # - hammerspoon  # macOS automation and window management
+  # - taskfile     # Modern task runner (alternative to make)
+  # - tldr         # Simplified command documentation
+  # - slides       # Terminal-based presentation tool
+  
+  # === Communication & Media ===
+  # - discord      # Team communication
+  # - spotify      # Music streaming
+  
+  # === Network & Remote Access ===
+  # - ssh          # SSH client configuration
+  # - sshfs        # Mount remote filesystems via SSH
+  # - tmate        # Terminal sharing for pair programming
+  
+  # === macOS Specific ===
+  # - aldente      # Battery charge limiter for macOS
+  
+  # === Linux Specific ===
+  # - flatpak      # Universal Linux package manager
+  # - nala         # Better apt frontend for Ubuntu/Debian
+  
+  # === Browser Tools ===
+  # - brave        # Privacy-focused web browser
+  
+  # === Cloud & Infrastructure CLIs ===
+  # - aws          # Amazon Web Services CLI
+  # - azure        # Microsoft Azure CLI
+  # - nomad        # HashiCorp Nomad (alternative to Kubernetes)
+  
+  # === Container Alternatives ===
+  # - orbstack     # Docker Desktop alternative for macOS
+  
+  # === Additional Terminal Emulators ===
+  # - alacritty    # Cross-platform GPU-accelerated terminal
+  # - ghostty      # Fast, feature-rich terminal emulator
+  
+  # === Development Tools ===
+  # - just         # Command runner (modern alternative to make)
+  # - goreleaser   # Go application release automation
+  
+  # === Kubernetes Ecosystem ===
+  # - kind         # Kubernetes in Docker for local testing
+  # - kwctl        # Kubernetes policy engine management
+  
+  # === Network & VPN Tools ===
+  # - wireguard    # Modern VPN solution
+  
+  # === Alternative Shells ===
+  # - bash         # Traditional bash shell configuration
+  # - pwsh         # PowerShell for cross-platform scripting
+  # - zellij       # Terminal workspace manager (alternative to tmux)
+  
+  # === Package Managers ===
+  # - whalebrew    # Homebrew but with Docker images
+  
+  # === Windows Specific ===
+  # - winget       # Windows package manager (Windows only)
+  
+  # === Fun Stuff ===
+  # - asciiquarium # Animated ASCII aquarium for your terminal
+  
+  # === Security & Authentication ===
+  # - 1password    # 1Password CLI integration
+  
+  # === Network Analysis ===
+  # - tshark       # Command-line network protocol analyzer

